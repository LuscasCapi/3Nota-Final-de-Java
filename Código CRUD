Lucas Rodrigues Capiluppi 202202863157

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Scanner;

public class CadastroAlunos {

    private static final String URL = "jdbc:postgresql://localhost:5432/meu_banco_de_dados";
    private static final String USUARIO = "usuario";
    private static final String SENHA = "senha";

    public static void main(String[] args) {
        try (Connection conn = DriverManager.getConnection(URL, USUARIO, SENHA)) {
            System.out.println("Conectado ao banco de dados.");

            criarTabela(conn);

            Scanner scanner = new Scanner(System.in);
            int opcao = 0;

            while (opcao != 5) {
                exibirMenu();
                opcao = scanner.nextInt();
                scanner.nextLine();

                switch (opcao) {
                    case 1:
                        cadastrarAluno(conn, scanner);
                        break;
                    case 2:
                        exibirAlunos(conn);
                        break;
                    case 3:
                        atualizarAluno(conn, scanner);
                        break;
                    case 4:
                        excluirAluno(conn, scanner);
                        break;
                    case 5:
                        System.out.println("Encerrando o programa.");
                        break;
                    default:
                        System.out.println("Opção inválida. Tente novamente.");
                        break;
                }
            }

        } catch (SQLException e) {
            System.err.println("Erro ao conectar ao banco de dados: " + e.getMessage());
        }
    }

    private static void criarTabela(Connection conn) throws SQLException {
        String sql = "CREATE TABLE IF NOT EXISTS alunos (id SERIAL PRIMARY KEY, nome VARCHAR(100), idade INTEGER, email VARCHAR(100), curso VARCHAR(100))";
        try (PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.execute();
        }
    }

    private static void exibirMenu() {
        System.out.println("===== MENU =====");
        System.out.println("1. Cadastrar Aluno");
        System.out.println("2. Exibir Alunos");
        System.out.println("3. Atualizar Aluno");
        System.out.println("4. Excluir Aluno");
        System.out.println("5. Sair");
        System.out.print("Escolha uma opção: ");
    }

    private static void cadastrarAluno(Connection conn, Scanner scanner) throws SQLException {
        System.out.println("===== CADASTRAR ALUNO =====");
        System.out.print("Nome: ");
        String nome = scanner.nextLine();
        System.out.print("Idade: ");
        int idade = scanner.nextInt();
        scanner.nextLine();
        System.out.print("Email: ");
        String email = scanner.nextLine();
        System.out.print("Curso: ");
        String curso = scanner.nextLine();

        String sql = "INSERT INTO alunos (nome, idade, email, curso) VALUES (?, ?, ?, ?)";
        try (PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setString(1, nome);
            stmt.setInt(2, idade);
            stmt.setString(3, email);
            stmt.setString(4, curso);
            stmt.executeUpdate();
            System.out.println("Aluno cadastrado com sucesso.");
        }
    }

    private static void exibirAlunos(Connection conn) throws SQLException {
        System.out.println("===== LISTA DE ALUNOS =====");
        String sql = "SELECT * FROM alunos";
        try (PreparedStatement stmt = conn.prepareStatement(sql);
             ResultSet rs = stmt.executeQuery()) {
            while (rs.next()) {
                int id = rs.getInt("id");
                String nome = rs.getString("nome");
                int idade = rs.getInt("idade");
                String email = rs.getString("email");
                String curso = rs.getString("curso");
                System.out.println("ID: " + id);
                System.out.println("Nome: " + nome);
                System.out.println("Idade: " + idade);
                System.out.println("Email: " + email);
                System.out.println("Curso: " + curso);
                System.out.println("------------------------");
            }
        }
    }

    private static void atualizarAluno(Connection conn, Scanner scanner) throws SQLException {
        System.out.println("===== ATUALIZAR ALUNO =====");
        System.out.print("Informe o ID do aluno que deseja atualizar: ");
        int id = scanner.nextInt();
        scanner.nextLine();


        String verificarAlunoSql = "SELECT * FROM alunos WHERE id = ?";
        try (PreparedStatement verificarStmt = conn.prepareStatement(verificarAlunoSql)) {
            verificarStmt.setInt(1, id);
            try (ResultSet rs = verificarStmt.executeQuery()) {
                if (!rs.next()) {
                    System.out.println("Aluno com ID " + id + " não encontrado.");
                    return;
                }
            }
        }

        System.out.print("Novo Nome: ");
        String nome = scanner.nextLine();
        System.out.print("Nova Idade: ");
        int idade = scanner.nextInt();
        scanner.nextLine();
        System.out.print("Novo Email: ");
        String email = scanner.nextLine();
        System.out.print("Novo Curso: ");
        String curso = scanner.nextLine();

        String sql = "UPDATE alunos SET nome = ?, idade = ?, email = ?, curso = ? WHERE id = ?";
        try (PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setString(1, nome);
            stmt.setInt(2, idade);
            stmt.setString(3, email);
            stmt.setString(4, curso);
            stmt.setInt(5, id);
            stmt.executeUpdate();
            System.out.println("Aluno atualizado com sucesso.");
        }
    }

    private static void excluirAluno(Connection conn, Scanner scanner) throws SQLException {
        System.out.println("===== EXCLUIR ALUNO =====");
        System.out.print("Informe o ID do aluno que deseja excluir: ");
        int id = scanner.nextInt();
        scanner.nextLine();

        String verificarAlunoSql = "SELECT * FROM alunos WHERE id = ?";
        try (PreparedStatement verificarStmt = conn.prepareStatement(verificarAlunoSql)) {
            verificarStmt.setInt(1, id);
            try (ResultSet rs = verificarStmt.executeQuery()) {
                if (!rs.next()) {
                    System.out.println("Aluno com ID " + id + " não encontrado.");
                    return;
                }
            }
        }

        String sql = "DELETE FROM alunos WHERE id = ?";
        try (PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setInt(1, id);
            stmt.executeUpdate();
            System.out.println("Aluno excluído com sucesso.");
        }
    }
}
